// <auto-generated />
using System;
using $safeprojectname$;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MyCo.$safeprojectname$.Migrations
{
    [DbContext(typeof(AssociateDbContext))]
    [Migration("20220221204708_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microservice.Domain.Associate", b =>
                {
                    b.Property<Guid>("RowKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AssociateKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PartitionKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RowKey");

                    b.HasIndex("AssociateKey")
                        .IsUnique()
                        .HasDatabaseName("IX_AssociateLocation_Associate");

                    b.ToTable("Associate", "Microservices");
                });

            modelBuilder.Entity("Microservice.Domain.Business", b =>
                {
                    b.Property<Guid>("RowKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BusinessName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PartitionKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("RowKey");

                    b.HasIndex("BusinessKey")
                        .IsUnique()
                        .HasDatabaseName("IX_Business_Key");

                    b.ToTable("Business", "Microservices");
                });

            modelBuilder.Entity("Microservice.Domain.Gender", b =>
                {
                    b.Property<Guid>("RowKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GenderCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid>("GenderKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GenderName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PartitionKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RowKey");

                    b.HasIndex("GenderCode")
                        .IsUnique()
                        .HasDatabaseName("IX_Gender_Code");

                    b.HasIndex("GenderKey")
                        .IsUnique()
                        .HasDatabaseName("IX_Gender_Key");

                    b.ToTable("Gender", "Microservices");

                    b.HasCheckConstraint("CC_Gender_GenderCode", "GenderCode in ('M', 'F', 'N/A', 'U/K')");
                });

            modelBuilder.Entity("Microservice.Domain.Government", b =>
                {
                    b.Property<Guid>("RowKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GovernmentKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GovernmentName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PartitionKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RowKey");

                    b.HasIndex("GovernmentKey")
                        .IsUnique()
                        .HasDatabaseName("IX_Government_Associate");

                    b.ToTable("Government", "Microservices");
                });

            modelBuilder.Entity("Microservice.Domain.Person", b =>
                {
                    b.Property<Guid>("RowKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("GenderCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PartitionKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PersonKey")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RowKey");

                    b.HasIndex("PersonKey")
                        .IsUnique()
                        .HasDatabaseName("IX_Person_Associate");

                    b.HasIndex("FirstName", "MiddleName", "LastName", "BirthDate")
                        .HasDatabaseName("IX_Person_All");

                    b.ToTable("Person", "Microservices");

                    b.HasCheckConstraint("CC_Person_GenderCode", "GenderCode in ('M', 'F', 'N/A', 'U/K')");
                });
#pragma warning restore 612, 618
        }
    }
}
