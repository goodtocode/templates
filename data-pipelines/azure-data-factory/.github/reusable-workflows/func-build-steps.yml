name: func-build-steps.yml

on:
  workflow_call:
    inputs:
      artifactsPath:
        description: 'Path to pipeline artifacts - Default: github.workspace/artifacts'
        required: false
        type: string
        default: '${{ github.workspace }}/artifacts'
      archiveFile:
        description: 'Mask to artifact compressed filename - Default: *.zip'
        required: false
        type: string
        default: '*.zip'
      scriptsPath:
        description: 'Path to PowerShell and CMD scripts - Default: github.workspace/scripts'
        required: false
        type: string
        default: '${{ github.workspace }}/scripts'
      funcPath:
        description: 'Path to .NET Azure Functions source project - Default: github.workspace/src'
        required: false
        type: string
        default: '${{ github.workspace }}/src'
      funcProject:
        description: 'Mask to .NET  Azure Functions source project file name - Default: *.csproj'
        required: false
        type: string
        default: '*.csproj'
      srcVersionToReplace:
        description: 'Version string to find-and-replace in packaging/assembly files - Default: 1.0.0'
        required: false
        type: string
        default: '1.0.0'
      tempPath:
        description: 'Path to temporary files working folder - Default: github.workspace/ymltemp'
        required: false
        type: string
        default: '${{ github.workspace }}/ymltemp'
      buildConfiguration:
        description: 'dotnet build --configuration value - Example: Release'
        required: false
        type: string
        default: 'Release'
      dotnetVersion:
        description: 'Mask to .NET version - Default: 6.x'
        required: false
        type: string
        default: '6.x'

jobs:
  build:
    steps:
    - uses: actions/checkout@v2
    - name: use .net ${{ github.event.inputs.dotnetVersion }}
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ github.event.inputs.dotnetVersion }}
    - name: Set-Version.ps1
      shell: powershell
      run: ${{ github.event.inputs.scriptsPath }}/Set-Version.ps1 --Path ${{ github.event.inputs.srcPath }} --VersionToReplace ${{ github.event.inputs.srcVersionToReplace }}
    - name: dotnet restore
      run: dotnet restore ${{ github.event.inputs.funcPath }}/**/${{ github.event.inputs.funcProject }}
    - name: dotnet build
      run: dotnet build ${{ github.event.inputs.funcPath }}/**/${{ github.event.inputs.funcProject }} --output ${{ github.event.inputs.tempPath }} --configuration ${{ github.event.inputs.buildConfiguration }}
    - name: Archive ${{ github.event.inputs.archiveFile }}
      uses: montudor/action-zip@v0.1.0
      with:
        args: zip -qq -r ${{ github.event.inputs.artifactsPath }}/${{ github.event.inputs.archiveFile }} ${{ github.event.inputs.tempPath }}
    - name: 'Publish Artifact: drop'
      uses: actions/upload-artifact@v2
      with:
        path: ${{ github.event.inputs.artifactsPath }}
        name: drop
                    